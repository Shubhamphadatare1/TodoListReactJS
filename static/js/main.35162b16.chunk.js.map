{"version":3,"sources":["components/List/List.module.css","components/Button/Button.module.css","pages/Todo.module.css","components/Button/Button.jsx","components/input/InputText.jsx","components/List/List.jsx","components/TodoList/TodoList.jsx","pages/Todo.jsx","App.js","index.js"],"names":["module","exports","Button","props","className","styles","Addlist","onClick","onButtonClick","buttonText","InputText","type","value","onKeyUp","onKeyUpInput","onChange","onInputTextChange","List","listMaxIndex","todoList","length","listItems","map","listItem","index","isEdit","itemEditText","event","editValue","target","onChangeEdit","onEditSubmitClick","onEditCancel","item","isDone","Edit","onEditClick","UP","swapListItem","DOWN","Done","onClickDone","Delete","onClickDelete","TodoList","useState","inputTextVal","setInputTextVal","setTodoList","useEffect","localTodoList","localStorage","getItem","JSON","parse","setItem","stringify","buttonClickHandler","trim","list","push","textValue","which","listIndex","splice","initialIndex","finalIndex","temp","Todo","todoname","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.35162b16.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Edit\":\"List_Edit__36Kuz\",\"UP\":\"List_UP__2CGy3\",\"DOWN\":\"List_DOWN__iHz1T\",\"Done\":\"List_Done__2opfd\",\"Delete\":\"List_Delete__YWTV_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Addlist\":\"Button_Addlist__3Yp_8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"todoname\":\"Todo_todoname__1YBAy\"};","import styles from '../Button/Button.module.css';\r\nconst Button =(props) =>(\r\n        <button  className= {styles.Addlist}\r\n            onClick={props.onButtonClick}>\r\n            {props.buttonText}\r\n        </button>\r\n    );\r\n\r\nexport default Button;","const InputText= (props)=>(\r\n        <input \r\n        type=\"text\" className=\"container-md\"\r\n        value={props.value}\r\n        onKeyUp={props.onKeyUpInput}\r\n        onChange={props.onInputTextChange}/>\r\n    );\r\n\r\nexport default InputText;","import Button from '../Button/Button';\r\nimport InputText from '../input/InputText';\r\nimport styles from '../List/List.module.css';\r\nconst List=(props) => {\r\n\r\nconst listMaxIndex = props.todoList.length -1;\r\n\r\n    const listItems = props.todoList.map((listItem,index)=>\r\n    (<li key={index}\r\n        className=\"list-group-item list-group-item-dark \">\r\n\r\n        {listItem.isEdit && (\r\n            <>\r\n                <InputText \r\n                    value={listItem.itemEditText}\r\n                    onInputTextChange={(event)=>{\r\n                        const editValue = event.target.value;\r\n                        props.onChangeEdit(index,editValue)}\r\n                        }/>\r\n                <Button \r\n                    onButtonClick={()=>{props.onEditSubmitClick(index)}}\r\n                    buttonText=\"Submit\" />\r\n                <Button \r\n                    onButtonClick={()=>{props.onEditCancel(index)}}\r\n                    buttonText=\"Cancel\" />\r\n            </>\r\n        )}\r\n\r\n        {!listItem.isEdit && (\r\n            <>\r\n        <span>\r\n            {listItem.item}\r\n        </span>\r\n\r\n        {!listItem.isDone && (\r\n        <button className= {styles.Edit}\r\n            onClick= {()=>{props.onEditClick(index)}}>\r\n            Edit\r\n        </button>\r\n        )}\r\n\r\n        {index!==0 && (\r\n            <button className= {styles.UP}\r\n                onClick= {()=>{props.swapListItem(index,index-1)}}>\r\n                UP\r\n            </button>\r\n        )}\r\n\r\n        {index!==listMaxIndex && (\r\n            <button className= {styles.DOWN}\r\n                onClick= {()=>{props.swapListItem(index,index+1)}}>\r\n                DOWN\r\n            </button>\r\n        )}\r\n\r\n\r\n        {!listItem.isDone && (\r\n        <button className= {styles.Done}\r\n            onClick={()=>{props.onClickDone(index)}}>\r\n            Done\r\n        </button>\r\n        )}\r\n        \r\n        {listItem.isDone && (\r\n        <button className= {styles.Delete}\r\n            onClick={()=>{props.onClickDelete(index)}}>\r\n            Delete\r\n        </button>\r\n        )}\r\n        </>\r\n        )}\r\n    </li>));\r\n        \r\n    \r\n    return <ol>{listItems}</ol>;\r\n};\r\n\r\nexport default List;","import { useEffect, useState } from \"react\";\r\nimport Button from \"../Button/Button\"\r\nimport InputText from \"../input/InputText\"\r\nimport List from \"../List/List\"\r\n\r\nconst TodoList= () =>{\r\n\r\n    const [inputTextVal,setInputTextVal] = useState('');\r\n    const [todoList,setTodoList] = useState([]);\r\n\r\n\r\n    useEffect(()=>{\r\n        const localTodoList = localStorage.getItem('todoList');\r\n        if(localTodoList){\r\n            const todoList = JSON.parse(localTodoList);\r\n            setTodoList(todoList);\r\n        }\r\n    },[]);\r\n\r\n    useEffect(()=>{\r\n        localStorage.setItem('todoList',JSON.stringify(todoList))\r\n    },[todoList]);\r\n\r\n    const inputTextChangeHandler = (event)=>{\r\n        const textValue = event.target.value;\r\n        setInputTextVal(textValue);\r\n    };\r\n\r\n    const buttonClickHandler = ()=>{\r\n        if(inputTextVal.trim()){\r\n            const list = [...todoList];\r\n            const listItems = {\r\n                item:inputTextVal,\r\n                itemEditText:inputTextVal,\r\n                isDone:false,\r\n                isEdit:false,\r\n            \r\n            }\r\n            list.push(listItems);\r\n            setInputTextVal('');\r\n            setTodoList(list);\r\n        }else{\r\n            setInputTextVal('');\r\n        }\r\n    };\r\n\r\n    const inputKeyUpHandler = (event)=>{\r\n        if(event.which === 13){\r\n            buttonClickHandler();\r\n        }\r\n    };\r\n\r\n    const isDoneHandler = (listIndex)=>{\r\n        const list = [...todoList];\r\n        list[listIndex].isDone = true;\r\n        setTodoList(list);\r\n    };\r\n\r\n    const deleteHandler = (listIndex)=>{\r\n        const list = [...todoList];\r\n        list.splice(listIndex,1);\r\n        setTodoList(list);\r\n    };\r\n\r\n    const swapListItemHandler =(initialIndex, finalIndex) =>{\r\n        const list = [...todoList];\r\n        const temp = list[initialIndex];\r\n        list[initialIndex] = list[finalIndex];\r\n        list[finalIndex] = temp;\r\n        setTodoList(list);\r\n    };\r\n\r\n    const listItemEditHandler = (listIndex)=>{\r\n        const list = [...todoList];\r\n        list[listIndex].isEdit = true;\r\n        setTodoList(list);\r\n    };\r\n\r\n    const listItemEditSubmitHandler = (listIndex)=>{\r\n        const list = [...todoList];\r\n        list[listIndex].item = list[listIndex].itemEditText;\r\n        list[listIndex].isEdit = false;\r\n        setTodoList(list);\r\n    };\r\n\r\n    const editChangeHandler = (listIndex,editValue)=>{\r\n        const list = [...todoList];\r\n        list[listIndex].itemEditText = editValue;\r\n        setTodoList(list);\r\n    };\r\n\r\n    const editCancelHandler = (listIndex)=>{\r\n        const list = [...todoList];\r\n        list[listIndex].itemEditText = list[listIndex].item;\r\n        list[listIndex].isEdit = false;\r\n        setTodoList(list);\r\n    };\r\n\r\nreturn(\r\n        <>\r\n        <InputText\r\n            onInputTextChange={inputTextChangeHandler}\r\n            onKeyUpInput={inputKeyUpHandler}\r\n            value={inputTextVal}/>\r\n        <Button \r\n            buttonText=\"Add into the List\"\r\n            onButtonClick={buttonClickHandler}/>\r\n        <List \r\n            todoList={todoList}\r\n            onClickDone={isDoneHandler}\r\n            onClickDelete={deleteHandler}\r\n            swapListItem={swapListItemHandler}\r\n            onEditClick={listItemEditHandler}\r\n            onEditSubmitClick={listItemEditSubmitHandler}\r\n            onEditCancel={editCancelHandler}\r\n            onChangeEdit={editChangeHandler}\r\n            />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default TodoList;","import TodoList from \"../components/TodoList/TodoList\";\r\nimport styles from \"../pages/Todo.module.css\";\r\nconst Todo =() =>(\r\n        <>\r\n        <div className= \"container\" >\r\n        <h1 className= {styles.todoname}>Shubham's Todo List App</h1>\r\n        <TodoList/></div>\r\n        </>\r\n    );\r\n \r\nexport default Todo;","import React from \"react\";\nimport './App.css';\nimport Todo from \"./pages/Todo\";\nimport'../node_modules/bootstrap/dist/css/bootstrap.min.css';\nfunction App() {\n  return (\n    <div className=\"container\">\n      <Todo/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}